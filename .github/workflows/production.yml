name: production

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Build
        run: docker build --tag tracer1337/wolfgang:wolfgang .

      - name: Docker Push
        run: |
          docker login --username tracer1337 --password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          docker push tracer1337/wolfgang:wolfgang

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Login
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login --username tracer1337 --password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Docker Remove
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker rm -f wolfgang
            docker rmi -f tracer1337/wolfgang:wolfgang
          
      - name: Docker Run
        uses: appleboy/ssh-action@v0.1.4
        env:
          PROD_DISCORD_BOT_HOST: wolfgang.gg
          PROD_DISCORD_BOT_PUBLIC_PORT: "80"
          PROD_DISCORD_BOT_PROTOCOL: https
          PROD_DISCORD_BOT_PORT: "8300"
          PROD_DATABASE_HOST: host.docker.internal
          PROD_DATABASE_PORT: "3306"
          PROD_DATABASE_NAME: discord-bot
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: |
            PROD_DISCORD_BOT_HOST,
            PROD_DISCORD_BOT_PUBLIC_PORT,
            PROD_DISCORD_BOT_PROTOCOL,
            PROD_DISCORD_BOT_PORT,
            PROD_DATABASE_HOST,
            PROD_DATABASE_PORT,
            PROD_DATABASE_NAME
          script: |
            docker run \
              --name wolfgang \
              --detach \
              --publish $PROD_DISCORD_BOT_PORT:8080 \
              --network wolfgang \
              --add-host host.docker.internal:host-gateway \
              --restart=always \
              --env DISCORD_BOT_TOKEN=${{ secrets.PROD_DISCORD_BOT_TOKEN }} \
              --env DISCORD_API_CLIENT_ID=${{ secrets.PROD_DISCORD_API_CLIENT_ID }} \
              --env DISCORD_API_CLIENT_SECRET=${{ secrets.PROD_DISCORD_API_CLIENT_SECRET }} \
              --env JWT_SECRET=${{ secrets.PROD_JWT_SECRET }} \
              --env HOST=$PROD_DISCORD_BOT_HOST \
              --env PUBLIC_PORT=$PROD_DISCORD_BOT_PUBLIC_PORT \
              --env PROTOCOL=$PROD_DISCORD_BOT_PROTOCOL \
              --env DATABASE_HOST=$PROD_DATABASE_HOST \
              --env DATABASE_PORT=$PROD_DATABASE_PORT \
              --env DATABASE_USER=${{ secrets.PROD_DATABASE_USER }} \
              --env DATABASE_PASSWORD=${{ secrets.PROD_DATABASE_PASSWORD }} \
              --env DATABASE_NAME=$PROD_DATABASE_NAME \
              tracer1337/wolfgang:wolfgang
